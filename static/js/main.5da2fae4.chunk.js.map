{"version":3,"sources":["axios.js","Components/Row.js","requests.js","Components/Banner.js","Components/Nav.js","App.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","handleClick","movie","id","trailerurl","key","className","map","backdrop_path","src","poster_path","alt","name","onClick","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchToprated","fetchActionMovies","fetchHorrorMovies","fetchDocumentaries","fetchRomanticMovies","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backdropPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5da2fae4.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"../axios\";\r\nimport \"./Row.css\";\r\nimport Youtube from \"react-youtube\";\r\n\r\nconst baseImgUrl = \"https://image.tmdb.org/t/p/original\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n    const [movies, setMovies] = useState([]);\r\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n    // Options for react-youtube\r\n    const opts = {\r\n        height: \"390\",\r\n        width: \"100%\",\r\n        playerVars: {\r\n            autoplay: 1,\r\n        },\r\n    };\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(fetchUrl);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, [fetchUrl]);\r\n\r\n    const handleClick = async (movie) => {\r\n        if (trailerUrl) {\r\n            setTrailerUrl(\"\");\r\n        } else {\r\n            let trailerurl = await axios.get(\r\n                `/movie/${movie.id}/videos?api_key=da7aae7224f5f99e8cfec7148625a1e0`\r\n            );\r\n            setTrailerUrl(trailerurl.data.results[0]?.key);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h2>{title}</h2>\r\n\r\n            <div className=\"row_posters\">\r\n                {movies.map(\r\n                    (movie) =>\r\n                        movie.backdrop_path !== null && (\r\n                            <img\r\n                                className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\r\n                                src={`${baseImgUrl}${isLargeRow ? movie.poster_path : movie.backdrop_path\r\n                                    }`}\r\n                                alt={movie.name}\r\n                                key={movie.id}\r\n                                onClick={() => handleClick(movie)}\r\n                            />\r\n                        )\r\n                )}\r\n            </div>\r\n            {trailerUrl && <Youtube videoId={trailerUrl} opts={opts} />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Row;","const API_KEY = \"da7aae7224f5f99e8cfec7148625a1e0\";\r\n\r\nconst requests = {\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchToprated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n    fetchRomanticMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`\r\n\r\n}\r\n\r\nexport default requests;","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"../axios\";\r\nimport requests from \"../requests\";\r\nimport './Banner.css';\r\n\r\n\r\nfunction Banner() {\r\n    const [movie, setMovie] = useState();\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(requests.fetchNetflixOriginals);\r\n            setMovie(\r\n                request.data.results[\r\n                Math.floor(Math.random() * request.data.results.length - 1)\r\n                ]\r\n            );\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    function truncate(str, n) {\r\n        return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <header\r\n            className=\"banner\"\r\n            style={{\r\n                backgroundSize: \"cover\",\r\n                backgroundImage: `url(\"https://image.tmdb.org/t/p/original${movie?.backdrop_path}\")`,\r\n                backdropPosition: \"center center\",\r\n            }}\r\n        >\r\n            {/* Background image */}\r\n            <div className=\"banner_contents\">\r\n                {/* title */}\r\n                <h1 className=\"banner_title\">\r\n                    {movie?.title || movie?.name || movie?.original_name}\r\n                </h1>\r\n\r\n                {/* 2 buttons */}\r\n                <div className=\"banner_buttons\">\r\n                    <button className=\"banner_button\">Play</button>\r\n                    <button className=\"banner_button\">My List </button>\r\n                </div>\r\n\r\n                {/* description */}\r\n                <h1 className=\"banner_description\">\r\n                    {truncate(movie?.overview, 150)}\r\n                </h1>\r\n            </div>\r\n            <div className=\"banner_fadeBottom\" />\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Banner;","import React, { useEffect, useState } from 'react';\r\nimport './Nav.css';\r\n\r\nfunction Nav() {\r\n    const [show, handleShow] = useState(false);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", () => {\r\n            if (window.scrollY > 100) {\r\n                handleShow(true);\r\n            } else handleShow(false);\r\n        });\r\n        return () => {\r\n            window.removeEventListener(\"scroll\");\r\n        };\r\n    }, []);\r\n    return (\r\n        <div className={`nav ${show && \"nav_black\"}`}>\r\n            <img\r\n                className=\"nav_logo\"\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1920px-Netflix_2015_logo.svg.png\"\r\n                alt=\"Netflix Logo\"\r\n\r\n            />\r\n\r\n\r\n            <img\r\n                className=\"nav_avatar\"\r\n                src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\"\r\n                alt=\"Avatar\"\r\n            />\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","\nimport './App.css';\nimport Row from './Components/Row';\nimport requests from './requests';\nimport Banner from './Components/Banner';\nimport Nav from './Components/Nav';\n\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Nav />\n      <Banner />\n\n\n      <Row title=\"NETFLIX ORIGINALS\"\n        fetchUrl={requests.fetchNetflixOriginals}\n        isLargeRow={true}\n\n      />\n      <Row title=\"TRENDING\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"TOP RATED\" fetchUrl={requests.fetchToprated} />\n      <Row title=\"ACTION MOVIES\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"HORROR MOVIES\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"DOCUMENTARIES\" fetchUrl={requests.fetchDocumentaries} />\n      <Row title=\"ROMANTIC MOVIES\" fetchUrl={requests.fetchRomanticMovies} />\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}